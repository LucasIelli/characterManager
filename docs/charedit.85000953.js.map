{"version":3,"sources":["../js/index.js","../js/callsAPI.js","../js/charedit.js"],"names":["clone","para1","forEach","id","image","name","shortDescription","characterClone","document","getElementById","content","cloneNode","src","innerHTML","href","appendChild","searchBar","toUpCase","value","toUpperCase","charCards","querySelectorAll","i","length","characterName","querySelector","textContent","innerText","indexOf","style","display","base64String","imageUploaded","file","reader","FileReader","onload","result","replace","readAsDataURL","fetched","fetch","fetching","json","fetchedId","idSplit","charCard","deleteChar","method","headers","addEventListener","splitted","window","location","split","children","description","values","inputs","Array","from","inDescription","map","trim","some","alert","body","JSON","stringify"],"mappings":"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","file":"charedit.85000953.js","sourceRoot":"../html","sourcesContent":["// Start main.js\r\nexport const clone = (para1)=>{ para1.forEach(({id, image, name, shortDescription})=>{\r\n  let characterClone = document.getElementById(\"tpl-char\").content.cloneNode(true);\r\n  characterClone.getElementById(\"charIMG\").src = `data:image/png;base64,${image}`;\r\n  characterClone.getElementById(\"charName\").innerHTML = name;\r\n  characterClone.getElementById(\"shortDescr\").innerHTML = shortDescription;\r\n  characterClone.getElementById(\"charLink\").href = `../html/single.html?${id}`;\r\n  document.getElementById(\"target\").appendChild(characterClone);\r\n})};\r\n// Search bar\r\nexport const searchBar = ()=>{\r\n  let toUpCase = document.getElementById('charSearch').value.toUpperCase();\r\n  let charCards = document.querySelectorAll('#container');\r\n// Loop through all list items, and hide those who don't match the search query\r\nfor (let i = 0; i < charCards.length; i++) {\r\n  let characterName = charCards[i].querySelector('#charName');\r\n  let charTxtValue = characterName.textContent || characterName.innerText;\r\n  if (charTxtValue.toUpperCase().indexOf(toUpCase) > -1){\r\n    charCards[i].style.display = '';\r\n  } else {\r\n    charCards[i].style.display = 'none';\r\n  }\r\n}\r\n};\r\n// End of main.js\r\n// charadd.js and charedit.js\r\n    // IMG Convertion\r\nexport let base64String = \" \";\r\nexport let imageUploaded = ()=>{\r\n    var file = document.querySelector(\"#fileId\")[\"files\"][0];\r\n    var reader = new FileReader();\r\n    reader.onload = ()=>{\r\n      base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n      document.getElementById(\"importedIMG\").src = `data:image/jpeg;base64,${base64String}`;\r\n    }\r\n    reader.readAsDataURL(file);\r\n    };","export const fetched = async()=>{\n    const fetching = await fetch(\"https://character-database.becode.xyz/characters\");\n    return await fetching.json();\n};\nexport const fetchedId = async(idSplit)=>{\n    const fetching = await fetch(`https://character-database.becode.xyz/characters/${idSplit}`);\n    let charCard = await fetching.json();\n    return charCard;\n};\nexport const deleteChar = async(idSplit)=>{\n    await fetch(`https://character-database.becode.xyz/characters/${idSplit}`,{\n        method: \"DELETE\",\n        headers: {\"Content-Type\": \"application/json\",}\n    ,})\n};\n","import { imageUploaded } from \"./index.js\";\nimport { fetchedId } from \"./callsAPI.js\"\ndocument.getElementById(\"fileId\").addEventListener(\"change\", imageUploaded);\n\n(async()=>{\n    // gather ID\n    let splitted = window.location.href.split('?');\n    let idSplit = splitted[1];\n    // Fetch ID and display\n    let charCard = await fetchedId(idSplit);\n    // Display with existing data\n    let base64String = charCard.image; \n    document.getElementById(\"importedIMG\").src = `data:image/png;base64,${charCard.image}`;\n    document.getElementById(\"inCharName\").value = charCard.name;\n    document.getElementById(\"inShortDescr\").value = charCard.shortDescription;\n    document.getElementById(\"inDescription\").children[0].innerHTML = charCard.description;\n\n    document.getElementById(\"inCharSave\").addEventListener(\"click\", async()=>{\n        //Gather all fields with data ID\n        //Except with the IMG Base64 data\n        let inputs = Array.from(document.querySelectorAll(\".data\"));\n        let inDescription = document.getElementById(\"inDescription\").children[0].innerHTML;\n        let values = inputs.map(({value}) => {\n          return value.trim();\n        });\n        if (values.some((value) => value === \"\")){\n          alert(\"Please fill in all fields\");\n          return;\n        }\n        let [name, shortDescription] = values;\n        await fetch(`https://character-database.becode.xyz/characters/${idSplit}`,{\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n              name: `${name}`,\n              shortDescription: `${shortDescription}`,\n              description: `${inDescription}`,\n              image: `${base64String}`,\n            })\n        });\n        window.location.replace(`single.html?${idSplit}`);\n      });\n})();"]}