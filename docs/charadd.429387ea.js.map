{"version":3,"sources":["../js/index.js","../js/charadd.js"],"names":["clone","para1","forEach","id","image","name","shortDescription","characterClone","document","getElementById","content","cloneNode","src","innerHTML","href","appendChild","searchBar","toUpCase","value","toUpperCase","charCards","querySelectorAll","i","length","characterName","querySelector","textContent","innerText","indexOf","style","display","base64String","imageUploaded","file","reader","FileReader","onload","result","replace","readAsDataURL","addEventListener","values","inputs","Array","from","map","trim","some","alert","fetch","description","method","headers","body","JSON","stringify","window","location"],"mappings":"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","file":"charadd.429387ea.js","sourceRoot":"../html","sourcesContent":["// Start main.js\r\nexport const clone = (para1)=>{ para1.forEach(({id, image, name, shortDescription})=>{\r\n  let characterClone = document.getElementById(\"tpl-char\").content.cloneNode(true);\r\n  characterClone.getElementById(\"charIMG\").src = `data:image/png;base64,${image}`;\r\n  characterClone.getElementById(\"charName\").innerHTML = name;\r\n  characterClone.getElementById(\"shortDescr\").innerHTML = shortDescription;\r\n  characterClone.getElementById(\"charLink\").href = `../html/single.html?${id}`;\r\n  document.getElementById(\"target\").appendChild(characterClone);\r\n})};\r\n// Search bar\r\nexport const searchBar = ()=>{\r\n  let toUpCase = document.getElementById('charSearch').value.toUpperCase();\r\n  let charCards = document.querySelectorAll('#container');\r\n// Loop through all list items, and hide those who don't match the search query\r\nfor (let i = 0; i < charCards.length; i++) {\r\n  let characterName = charCards[i].querySelector('#charName');\r\n  let charTxtValue = characterName.textContent || characterName.innerText;\r\n  if (charTxtValue.toUpperCase().indexOf(toUpCase) > -1){\r\n    charCards[i].style.display = '';\r\n  } else {\r\n    charCards[i].style.display = 'none';\r\n  }\r\n}\r\n};\r\n// End of main.js\r\n// charadd.js and charedit.js\r\n    // IMG Convertion\r\nexport let base64String = \" \";\r\nexport let imageUploaded = ()=>{\r\n    var file = document.querySelector(\"#fileId\")[\"files\"][0];\r\n    var reader = new FileReader();\r\n    reader.onload = ()=>{\r\n      base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n      document.getElementById(\"importedIMG\").src = `data:image/jpeg;base64,${base64String}`;\r\n    }\r\n    reader.readAsDataURL(file);\r\n    };","import { imageUploaded } from \"./index.js\";\nimport { base64String } from \"./index.js\";\ndocument.getElementById(\"fileId\").addEventListener(\"change\", imageUploaded);\n\n// Gather & Export data \ndocument.getElementById(\"inCharAdd\").addEventListener(\"click\", async()=>{\n      let inputs = Array.from(document.querySelectorAll(\".data\"));\n      let values = inputs.map(({value})=>{\n        return value.trim();\n      });\n      if (values.some((value)=>value === \"\")) {\n        alert(\"Please fill in all fields\");\n        return;\n      }\n      let [name, shortDescription, description] = values;\n      await fetch(\"https://character-database.becode.xyz/characters\",{\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",},\n        body: JSON.stringify({name, shortDescription, description, image:base64String}),});\n      window.location.replace(`../html/index.html`);\n      alert(`Thank you for adding ${name}`);\n    });\n\n    \n\n\n"]}